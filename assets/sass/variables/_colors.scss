:root {
  // Brand color
  --color-primary: hsl(12, 83%, 62%);
  --color-primary-light: hsl(12, 83%, 72%);
  --color-primary-lightest: hsl(12, 83%, 92%);
  --color-primary-darken: hsl(12, 83%, 52%);
  --color-secondary: hsl(218, 23%, 21%);
  --color-secondary-light: hsl(218, 23%, 31%);
  --color-secondary-lightest: hsl(218, 13%, 61%);
  --color-secondary-darken: hsl(218, 23%, 11%);
  --color-black: hsl(0, 0%, 0%);
  --color-white: hsl(0, 0%, 100%);
  --color-gray: hsl(0, 0%, 80%);
  --color-gray-light: hsl(0, 0%, 95%);
  --color-gray-darken: hsl(0, 0%, 70%);

  // Element states
  --color-error: hsl(359, 80%, 56%);
  --color-success: hsl(80, 66%, 50%);
  --color-warning: hsl(30, 99%, 58%);
}

$colors: (
  "primary": hsl(12, 83%, 62%),
  "secondary": hsl(218, 23%, 21%),
  "success": hsl(80, 66%, 50%),
  "error": hsl(359, 80%, 56%),
  "warning": hsl(359, 80%, 56%),
  "white": hsl(0, 0%, 100%),
  "black": hsl(0, 0%, 0%),
  "gray": hsl(0, 0%, 80%),
  "typography": hsl(218, 23%, 21%)
);  $colors: map-merge($colors, $colors);

$primary: map-get($colors, "primary");
$secondary: map-get($colors, "secondary");
$tertiary: map-get($colors, "tertiary");
$positive: map-get($colors, "positive");
$negative: map-get($colors, "negative");
$alert: map-get($colors, "alert");
$black: map-get($colors, "black");
$white: map-get($colors, "white");
$gray: map-get($colors, "gray");
$light: map-get($colors, "light");
$dark: map-get($colors, "dark");
$typography: map-get($colors, "typography");

@each $color, $value in $colors {
  .#{$color}-color {
    color: $value;
  }

  .#{$color}-bg {
    color: $value;
  }
}
